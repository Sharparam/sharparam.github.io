#!/usr/bin/env ruby
# frozen_string_literal: true

require 'open-uri'
require 'set'

LIGHT_VARIANT = 'latte'
DARK_VARIANT = 'frappe'

repo_root = File.expand_path('..', __dir__)

puts "Repo root is #{repo_root}"

CATPPUCCIN_CSS = 'https://unpkg.com/@catppuccin/palette/css/catppuccin.css'

puts "Downloading source CSS from #{CATPPUCCIN_CSS}"
css = URI.open(CATPPUCCIN_CSS).read

lines = css.lines.select { |l| l.include?('--ctp-') }.map(&:strip)

processed = [
  '/* stylelint-disable */',
  '/* prettier-ignore */',
  '/* This file is generated by bin/create-catppuccin-css */',
  ':root {'
]

names = Set.new

lines.each do |line|
  var, content = line.split(': ')
  parts = var.split('-')
  variant = parts[3]
  next unless variant == LIGHT_VARIANT || variant == DARK_VARIANT
  name = parts[4]
  names.add name
  processed.push "  #{line}"
  next unless line.include?('-hsl:')
  trio = %w[h s l].zip(content.split(' ').tap { |a| a[2].chop! }).map { |s, v| "  #{var}-#{s}: #{v};" }
  processed.concat trio
end

names.each do |name|
  processed.concat [
    "  --ctp-#{name}: var(--ctp-#{LIGHT_VARIANT}-#{name});",
    "  --ctp-#{name}-rgb: var(--ctp-#{LIGHT_VARIANT}-#{name}-rgb);",
    "  --ctp-#{name}-hsl: var(--ctp-#{LIGHT_VARIANT}-#{name}-hsl);",
    "  --ctp-#{name}-hsl-h: var(--ctp-#{LIGHT_VARIANT}-#{name}-hsl-h);",
    "  --ctp-#{name}-hsl-s: var(--ctp-#{LIGHT_VARIANT}-#{name}-hsl-s);",
    "  --ctp-#{name}-hsl-l: var(--ctp-#{LIGHT_VARIANT}-#{name}-hsl-l);"
  ]
end

processed.concat [
  '}',
  '',
  '@media (prefers-color-scheme: dark) {',
  '  :root {'
]

names.each do |name|
  processed.concat [
    "    --ctp-#{name}: var(--ctp-#{DARK_VARIANT}-#{name});",
    "    --ctp-#{name}-rgb: var(--ctp-#{DARK_VARIANT}-#{name}-rgb);",
    "    --ctp-#{name}-hsl: var(--ctp-#{DARK_VARIANT}-#{name}-hsl);",
    "    --ctp-#{name}-hsl-h: var(--ctp-#{DARK_VARIANT}-#{name}-hsl-h);",
    "    --ctp-#{name}-hsl-s: var(--ctp-#{DARK_VARIANT}-#{name}-hsl-s);",
    "    --ctp-#{name}-hsl-l: var(--ctp-#{DARK_VARIANT}-#{name}-hsl-l);"
  ]
end

processed.concat [
  '  }',
  '}'
]

text = processed.join("\n")

path = File.join(repo_root, 'public', 'css', 'catppuccin.css')
File.write(path, text)

puts "Done!"
